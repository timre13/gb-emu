#ifndef OPCODE_SIZES_H_
#define OPCODE_SIZES_H_

#include <array>

// The size of the opcodes in bytes
std::array<int, 256> opcodeSizes{
    1, // 0x0
    3, // 0x1
    1, // 0x2
    1, // 0x3
    1, // 0x4
    1, // 0x5
    2, // 0x6
    1, // 0x7
    3, // 0x8
    1, // 0x9
    1, // 0xa
    1, // 0xb
    1, // 0xc
    1, // 0xd
    2, // 0xe
    1, // 0xf
    2, // 0x10
    3, // 0x11
    1, // 0x12
    1, // 0x13
    1, // 0x14
    1, // 0x15
    2, // 0x16
    1, // 0x17
    2, // 0x18
    1, // 0x19
    1, // 0x1a
    1, // 0x1b
    1, // 0x1c
    1, // 0x1d
    2, // 0x1e
    1, // 0x1f
    2, // 0x20
    3, // 0x21
    1, // 0x22
    1, // 0x23
    1, // 0x24
    1, // 0x25
    2, // 0x26
    1, // 0x27
    2, // 0x28
    1, // 0x29
    1, // 0x2a
    1, // 0x2b
    1, // 0x2c
    1, // 0x2d
    2, // 0x2e
    1, // 0x2f
    2, // 0x30
    3, // 0x31
    1, // 0x32
    1, // 0x33
    1, // 0x34
    1, // 0x35
    2, // 0x36
    1, // 0x37
    2, // 0x38
    1, // 0x39
    1, // 0x3a
    1, // 0x3b
    1, // 0x3c
    1, // 0x3d
    2, // 0x3e
    1, // 0x3f
    1, // 0x40
    1, // 0x41
    1, // 0x42
    1, // 0x43
    1, // 0x44
    1, // 0x45
    1, // 0x46
    1, // 0x47
    1, // 0x48
    1, // 0x49
    1, // 0x4a
    1, // 0x4b
    1, // 0x4c
    1, // 0x4d
    1, // 0x4e
    1, // 0x4f
    1, // 0x50
    1, // 0x51
    1, // 0x52
    1, // 0x53
    1, // 0x54
    1, // 0x55
    1, // 0x56
    1, // 0x57
    1, // 0x58
    1, // 0x59
    1, // 0x5a
    1, // 0x5b
    1, // 0x5c
    1, // 0x5d
    1, // 0x5e
    1, // 0x5f
    1, // 0x60
    1, // 0x61
    1, // 0x62
    1, // 0x63
    1, // 0x64
    1, // 0x65
    1, // 0x66
    1, // 0x67
    1, // 0x68
    1, // 0x69
    1, // 0x6a
    1, // 0x6b
    1, // 0x6c
    1, // 0x6d
    1, // 0x6e
    1, // 0x6f
    1, // 0x70
    1, // 0x71
    1, // 0x72
    1, // 0x73
    1, // 0x74
    1, // 0x75
    1, // 0x76
    1, // 0x77
    1, // 0x78
    1, // 0x79
    1, // 0x7a
    1, // 0x7b
    1, // 0x7c
    1, // 0x7d
    1, // 0x7e
    1, // 0x7f
    1, // 0x80
    1, // 0x81
    1, // 0x82
    1, // 0x83
    1, // 0x84
    1, // 0x85
    1, // 0x86
    1, // 0x87
    1, // 0x88
    1, // 0x89
    1, // 0x8a
    1, // 0x8b
    1, // 0x8c
    1, // 0x8d
    1, // 0x8e
    1, // 0x8f
    1, // 0x90
    1, // 0x91
    1, // 0x92
    1, // 0x93
    1, // 0x94
    1, // 0x95
    1, // 0x96
    1, // 0x97
    1, // 0x98
    1, // 0x99
    1, // 0x9a
    1, // 0x9b
    1, // 0x9c
    1, // 0x9d
    1, // 0x9e
    1, // 0x9f
    1, // 0xa0
    1, // 0xa1
    1, // 0xa2
    1, // 0xa3
    1, // 0xa4
    1, // 0xa5
    1, // 0xa6
    1, // 0xa7
    1, // 0xa8
    1, // 0xa9
    1, // 0xaa
    1, // 0xab
    1, // 0xac
    1, // 0xad
    1, // 0xae
    1, // 0xaf
    1, // 0xb0
    1, // 0xb1
    1, // 0xb2
    1, // 0xb3
    1, // 0xb4
    1, // 0xb5
    1, // 0xb6
    1, // 0xb7
    1, // 0xb8
    1, // 0xb9
    1, // 0xba
    1, // 0xbb
    1, // 0xbc
    1, // 0xbd
    1, // 0xbe
    1, // 0xbf
    1, // 0xc0
    1, // 0xc1
    3, // 0xc2
    3, // 0xc3
    3, // 0xc4
    1, // 0xc5
    2, // 0xc6
    1, // 0xc7
    1, // 0xc8
    1, // 0xc9
    3, // 0xca
    1, // 0xcb
    3, // 0xcc
    3, // 0xcd
    2, // 0xce
    1, // 0xcf
    1, // 0xd0
    1, // 0xd1
    3, // 0xd2
    1, // 0xd3
    3, // 0xd4
    1, // 0xd5
    2, // 0xd6
    1, // 0xd7
    1, // 0xd8
    1, // 0xd9
    3, // 0xda
    1, // 0xdb
    3, // 0xdc
    1, // 0xdd
    2, // 0xde
    1, // 0xdf
    2, // 0xe0
    1, // 0xe1
    1, // 0xe2
    1, // 0xe3
    1, // 0xe4
    1, // 0xe5
    2, // 0xe6
    1, // 0xe7
    2, // 0xe8
    1, // 0xe9
    3, // 0xea
    1, // 0xeb
    1, // 0xec
    1, // 0xed
    2, // 0xee
    1, // 0xef
    2, // 0xf0
    1, // 0xf1
    1, // 0xf2
    1, // 0xf3
    1, // 0xf4
    1, // 0xf5
    2, // 0xf6
    1, // 0xf7
    2, // 0xf8
    1, // 0xf9
    3, // 0xfa
    1, // 0xfb
    1, // 0xfc
    1, // 0xfd
    2, // 0xfe
    1, // 0xff
};

#endif /* OPCODE_SIZES_H_ */
